(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{499:function(t,a,e){"use strict";e.r(a);var i=e(6),s=Object(i.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"一、-比较暂存区和head的文件差异"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、-比较暂存区和head的文件差异"}},[t._v("#")]),t._v(" 一、 比较暂存区和HEAD的文件差异")]),t._v(" "),e("p",[e("code",[t._v("git diff --cached")])]),t._v(" "),e("h2",{attrs:{id:"二、-比较工作区和暂存区的文件差异"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、-比较工作区和暂存区的文件差异"}},[t._v("#")]),t._v(" 二、 比较工作区和暂存区的文件差异")]),t._v(" "),e("p",[e("code",[t._v("git diff")])]),t._v(" "),e("p",[t._v("指定文件进行差异对比")]),t._v(" "),e("p",[e("code",[t._v("git diff -- <file>...")])]),t._v(" "),e("h2",{attrs:{id:"三、撤销暂存区的所有提交并恢复到工作区"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、撤销暂存区的所有提交并恢复到工作区"}},[t._v("#")]),t._v(" 三、撤销暂存区的所有提交并恢复到工作区")]),t._v(" "),e("p",[e("code",[t._v("git reset HEAD")])]),t._v(" "),e("h2",{attrs:{id:"四、让暂存区的提交恢复到工作区"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、让暂存区的提交恢复到工作区"}},[t._v("#")]),t._v(" 四、让暂存区的提交恢复到工作区")]),t._v(" "),e("p",[e("code",[t._v("git checkout -- <file>...")])]),t._v(" "),e("h2",{attrs:{id:"五、撤销暂存区的提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#五、撤销暂存区的提交"}},[t._v("#")]),t._v(" 五、撤销暂存区的提交")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("git restore --staged <file>...")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("git reset HEAD <file>...")])])])]),t._v(" "),e("h2",{attrs:{id:"六、撤销工作区的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#六、撤销工作区的修改"}},[t._v("#")]),t._v(" 六、撤销工作区的修改")]),t._v(" "),e("p",[e("code",[t._v("git restore <file>...")])]),t._v(" "),e("h2",{attrs:{id:"七、撤销最近的几次提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#七、撤销最近的几次提交"}},[t._v("#")]),t._v(" 七、撤销最近的几次提交")]),t._v(" "),e("p",[e("code",[t._v("git reset --hard <hashId>")]),t._v(" 将头指针移到指定的 commit")]),t._v(" "),e("h2",{attrs:{id:"八、不同提交的指定文件的对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#八、不同提交的指定文件的对比"}},[t._v("#")]),t._v(" 八、不同提交的指定文件的对比")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git diff <branch> <other branch>")]),t._v(" 比较两个分支所有文件的差异")]),t._v(" "),e("li",[e("code",[t._v("git diff <branch> <other branch> -- <file>...")]),t._v(" 比较两个分支指定文件的差异")]),t._v(" "),e("li",[e("code",[t._v("git diff <commit ID> <other commit ID> -- <file>...")]),t._v(" 比较两个不同提交指定文件的差异")])]),t._v(" "),e("h2",{attrs:{id:"九、使用-git-删除文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#九、使用-git-删除文件"}},[t._v("#")]),t._v(" 九、使用 git 删除文件")]),t._v(" "),e("p",[e("code",[t._v("git rm <file>...")])]),t._v(" "),e("h2",{attrs:{id:"十、临时处理其它任务的情况"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#十、临时处理其它任务的情况"}},[t._v("#")]),t._v(" 十、临时处理其它任务的情况")]),t._v(" "),e("p",[e("code",[t._v("git stash")]),t._v(" 存放当前状态\n"),e("code",[t._v("git stash list")]),t._v(" 查看存放的状态\n"),e("code",[t._v("git status")]),t._v(" 查看工作区和暂存区的状态，执行了上面的命令后，此刻是干净的\n"),e("code",[t._v("git stash apply")]),t._v(" 干完其它事情后，恢复到之前存放的状态, 但不删除stash 堆栈中的记录\n"),e("code",[t._v("git stash list")]),t._v(" 还能看到之前存放的记录\n"),e("code",[t._v("git reset --hard HEAD")]),t._v(" 将工作区和暂存区清空\n"),e("code",[t._v("git stash pop")]),t._v(" 恢复到之前存放的状态, 并删除stash 堆栈中的记录\n"),e("code",[t._v("git stash list")]),t._v(" 现在看不到之前保存的记录了")]),t._v(" "),e("h2",{attrs:{id:"十一、创建仓库与备份"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#十一、创建仓库与备份"}},[t._v("#")]),t._v(" 十一、创建仓库与备份")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("git clone --bare </path/to/repo.git>")]),t._v(" 基于哑协议创建仓库")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("git clone --bare <file:///path/to/repo.git>")]),t._v(" 基于智能协议创建仓库")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("git remote add <repo name> <url>")]),t._v(" 添加远程仓库 url 格式根据传输协议进行配置")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("git push --set-upstream <repo name> <branch>")]),t._v(" 将本地仓库备份到远程仓库")])])]),t._v(" "),e("h2",{attrs:{id:"十二、修改最新的提交信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#十二、修改最新的提交信息"}},[t._v("#")]),t._v(" 十二、修改最新的提交信息")]),t._v(" "),e("p",[e("code",[t._v("git commit --amend")])]),t._v(" "),e("h2",{attrs:{id:"十三、修改老旧的-commit-的提交信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#十三、修改老旧的-commit-的提交信息"}},[t._v("#")]),t._v(" 十三、修改老旧的 commit 的提交信息")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git rebase -i <parent version>")]),t._v(", 在交互界面使用 "),e("code",[t._v("reword")]),t._v(" 关键字进行指定操作")])]),t._v(" "),e("h2",{attrs:{id:"十四、-把连续多个-commit-集成为一个-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#十四、-把连续多个-commit-集成为一个-commit"}},[t._v("#")]),t._v(" 十四、 把连续多个 commit 集成为一个 commit")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git rebase -i <parent version>")]),t._v(", 在交互界面使用 "),e("code",[t._v("squash")]),t._v(" 关键字进行指定操作")])]),t._v(" "),e("h2",{attrs:{id:"十五、把间隔的几个-commit-合成一个-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#十五、把间隔的几个-commit-合成一个-commit"}},[t._v("#")]),t._v(" 十五、把间隔的几个 commit 合成一个 commit")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git rebase -i <parent version>")]),t._v(", 在交互界面, 将间隔的几个commit移动到一起， 使用 "),e("code",[t._v("squash")]),t._v(" 关键字进行指定操作")]),t._v(" "),e("li",[e("code",[t._v("git rebase --continue")]),t._v(" 间隔的几个 commit 合并在指定操作后, 需要接着运行这条命令继续进行合并")])])])}),[],!1,null,null,null);a.default=s.exports}}]);